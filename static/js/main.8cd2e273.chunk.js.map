{"version":3,"sources":["components/Profile/MyPosts/MyPost.module.css","components/Header/Header.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.module.css","serviceWorker.js","components/Header/Header.jsx","components/Navbar/Nav.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","Redux/profile-reducer.js","StoreContext.js","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPost.jsx","components/Profile/MyPosts/MyPostContainer.jsx","components/Profile/Profile.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","Redux/dialogs-reducer.js","components/Dialogs/DialogsContainer.jsx","components/Setting/Setting.jsx","components/Music/Music.jsx","components/News/News.jsx","App.js","Redux/sidebar-reducer.js","Redux/redux-store.js","index.js","components/Navbar/Navbar.module.css","components/Dialogs/Dialogs.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","Header","className","s","header","src","Nav","nav","item","to","activeClassName","active","ProfileInfo","descriptionBlock","initialState","newPostText","postData","id","message","likeCounts","profileReducer","state","action","type","newPost","unshift","newText","StoreContext","React","createContext","Provider","props","value","store","children","Post","alt","MyPost","postElements","postdata","map","el","postsBlock","onChange","e","updateNewPostText","currentTarget","onClick","addPost","posts","MyPostContainer","Consumer","getState","dispatch","profilePage","Profile","DialogItem","dialog","name","Message","Dialogs","dialogsElements","dialogsData","messagesElement","messagesData","dialogs","dialogsItems","messages","updateNewMessage","placeholder","newMessageText","addMessage","dialogsReducer","push","DialogsContainer","dialogsPage","Setting","Music","News","App","path","render","component","sidebarReducer","reducers","combineReducers","sidebar","createStore","rerenderEntireTree","ReactDOM","document","getElementById","subscribe","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.8cd2e273.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPost_postsBlock__3cE9X\",\"posts\":\"MyPost_posts__Rngb3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__gCK-D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1mb3A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2LeaV\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport s from './Header.module.css' ;\r\n\r\nexport const Header =()=>{\r\n    return(\r\n        <header className={s.header}>\r\n        <img src=\"https://i.pinimg.com/originals/33/b8/69/33b869f90619e81763dbf1fccc896d8d.jpg\"/>\r\n      </header>\r\n    )\r\n}","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nexport const Nav = () => {\r\n  return (\r\n    <nav className={s.nav}>\r\n      <div className={s.item}>\r\n        <NavLink to='/profile' activeClassName={s.active}>Profile</NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to='/dialogs' activeClassName={s.active}>Messages</NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to='/news' activeClassName={s.active}>News</NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to='/music' activeClassName={s.active}>Music</NavLink>\r\n      </div>\r\n      <div className={s.item}>\r\n        <NavLink to='/setting' activeClassName={s.active}>Setting</NavLink>\r\n      </div>\r\n    </nav>\r\n  )\r\n}","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\nexport const ProfileInfo = () => {\r\n  return (\r\n    <div>\r\n      <div>\r\n        <img src=\"https://gadgetmedics.com/wp-content/uploads/2020/01/illustration-geiranger.jpg\" />\r\n      </div>\r\n      <div className={s.descriptionBlock}>\r\n        ava+description\r\n      </div>\r\n    </div>\r\n  )\r\n}","const ADD_POST = \"ADD-POST\";\r\nconst UPDATE_NEW_POST_TEXT = \"UPDATE-NEW-POST-TEXT\";\r\n\r\nconst initialState = {\r\n  newPostText: \"it-kamasutra.com\",\r\n  postData: [\r\n    { id: 1, message: \"Hi, how are you?\", likeCounts: 12 },\r\n    { id: 2, message: \"It's my first post\", likeCounts: 11 },\r\n  ],\r\n}\r\n\r\nconst profileReducer = (state=initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST:\r\n      let newPost = {\r\n        id: 5,\r\n        message: state.newPostText,\r\n        likeCounts: 0,\r\n      };\r\n      state.postData.unshift(newPost);\r\n      state.newPostText = \"\";\r\n      return state;\r\n    case UPDATE_NEW_POST_TEXT:\r\n      state.newPostText = action.newText;\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const addPostActionCreator = () => ({ type: ADD_POST });\r\nexport const updateNewPostTextActionCreator = (newText) => ({\r\n  type: UPDATE_NEW_POST_TEXT,\r\n  newText: newText,\r\n});\r\n\r\nexport default profileReducer;\r\n","import React from 'react'\r\nconst StoreContext = React.createContext(null)\r\n\r\n export const Provider=(props)=>{\r\n    return <StoreContext.Provider value={props.store}> \r\n        {props.children}\r\n    </StoreContext.Provider>\r\n}\r\n\r\n\r\nexport default StoreContext","import React from 'react';\r\nimport s from './Post.module.css';\r\nexport const Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src=\"https://i.wpimg.pl/730x0/m.gadzetomania.pl/tumblr-kwh4eacbzu1qaptl6-a9d2590.jpg\" alt=\"\" />\r\n      {props.message}\r\n      <div>\r\n        <span>like</span> {props.likeCounts}\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport s from './MyPost.module.css';\r\nimport { Post } from './Post/Post';\r\n\r\nexport const MyPost = (props) => {\r\n  let postElements=props.postdata.map(el => <Post message={el.message} likeCounts={el.likeCounts} />)\r\n  \r\n  let addPost=() => {\r\n    props.addPost()\r\n  }\r\n  const onPostChange=(e)=>{\r\n    props.updateNewPostText(e.currentTarget.value)\r\n  }\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My post</h3>\r\n      <div>\r\n        <div>\r\n          <textarea  onChange={onPostChange} value={props.newPostText}/>\r\n        </div>\r\n        <div>\r\n          <button onClick={addPost}>Add post</button>\r\n        </div>\r\n      </div>\r\n      <div className={s.posts}>\r\n        {postElements}\r\n      </div>\r\n    </div >\r\n  )\r\n}","import React from 'react';\r\nimport { addPostActionCreator, updateNewPostTextActionCreator } from '../../../Redux/profile-reducer';\r\nimport StoreContext from '../../../StoreContext';\r\nimport { MyPost } from './MyPost';\r\n\r\nexport const MyPostContainer = (props) => { \r\n  \r\n  return (\r\n    <StoreContext.Consumer>{\r\n      (store)=>{\r\n        const state = store.getState()\r\n        const addPost=() => {\r\n          store.dispatch(addPostActionCreator())\r\n        }\r\n        const onPostChange=(e)=>{\r\n          store.dispatch(updateNewPostTextActionCreator(e))\r\n        }\r\n          return <MyPost addPost={addPost}\r\n                 updateNewPostText={onPostChange}\r\n                 newPostText={state.profilePage.newPostText}\r\n                 postdata={state.profilePage.postData}/>\r\n      }\r\n      }\r\n    </StoreContext.Consumer>\r\n  )\r\n}","import React from 'react';\r\nimport { ProfileInfo} from './ProfileInfo/ProfileInfo';\r\nimport { MyPostContainer } from './MyPosts/MyPostContainer';\r\n\r\n\r\nexport const Profile = (props) =>{\r\n \r\n    return(\r\n        <div>\r\n          <ProfileInfo/>\r\n          <MyPostContainer />\r\n      </div>\r\n    )\r\n}","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={s.dialog}>\r\n            <NavLink to={'/dialogs/' + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>{props.message}\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\n\r\nconst Dialogs = (props) => {\r\nlet dialogsElements = props.state.dialogsData.map(el => <DialogItem name={el.name} id={el.id} />)\r\nlet messagesElement = props.state.messagesData.map(el => <Message message={el.message} />)\r\nconst addMessage=()=>{\r\n    props.addMessage()\r\n}\r\nconst onMessageChange=(e)=>{\r\n    props.updateNewMessage(e.currentTarget.value)\r\n}\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messagesElement}\r\n                <div>\r\n                    <textarea onChange={onMessageChange} placeholder='Enter your message' value={props.state.newMessageText}></textarea>\r\n                </div>\r\n                <div><button onClick={addMessage}>sent</button></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs","const ADD_MESSAGE = \"ADD-MESSAGE\";\r\nconst UPDATE_NEW_MESSAGE_TEXT = \"UPDATE-NEW-MESSAGE-TEXT\";\r\n\r\nconst initialState = {\r\n  dialogsData: [\r\n    { id: 1, name: \"Dimych\" },\r\n    { id: 2, name: \"Andrey\" },\r\n    { id: 3, name: \"Sveta\" },\r\n    { id: 4, name: \"Sasha\" },\r\n    { id: 5, name: \"Viktor\" },\r\n    { id: 6, name: \"Valera\" },\r\n  ],\r\n  newMessageText: \"\",\r\n  messagesData: [\r\n    { id: 1, message: \"Hi\" },\r\n    { id: 2, message: \"How is your it-kamasutra\" },\r\n    { id: 3, message: \"Yo\" },\r\n    { id: 4, message: \"Yo\" },\r\n    { id: 5, message: \"Yo\" },\r\n  ],\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_MESSAGE:\r\n      let newPost = {\r\n        id: 8,\r\n        message: state.newMessageText,\r\n      };\r\n      state.messagesData.push(newPost);\r\n      state.newMessageText = \"\";\r\n      return state;\r\n    case UPDATE_NEW_MESSAGE_TEXT:\r\n      state.newMessageText = action.newText;\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const addMessageActionCreator = () => ({ type: ADD_MESSAGE });\r\nexport const updateNewMessageActionCreator = (newText) => ({\r\n  type: UPDATE_NEW_MESSAGE_TEXT,\r\n  newText: newText,\r\n});\r\n\r\nexport default dialogsReducer;\r\n","import React from 'react';\r\nimport Dialogs from './Dialogs'\r\nimport { addMessageActionCreator, updateNewMessageActionCreator } from '../../Redux/dialogs-reducer';\r\nimport StoreContext from '../../StoreContext';\r\n\r\nexport const DialogsContainer = (props) => {\r\n\r\n    return (\r\n        <StoreContext.Consumer>{\r\n            (store)=>{\r\n                const state = store.getState().dialogsPage\r\n                const addMessage=()=>{\r\n                    store.dispatch(addMessageActionCreator())\r\n                }\r\n                const onMessageChange=(e)=>{\r\n                     store.dispatch(updateNewMessageActionCreator(e))\r\n                }\r\n                return <Dialogs state={state}\r\n                    updateNewMessage={onMessageChange}\r\n                    addMessage={addMessage}/>\r\n            }\r\n        }\r\n        </StoreContext.Consumer>\r\n )\r\n}","import React from 'react';\r\n\r\nconst Setting=()=>{\r\n    return(\r\n        <div>\r\n            Setting\r\n        </div>        \r\n    )\r\n}\r\n\r\nexport default Setting","import React from 'react';\r\n\r\nconst Music=()=>{\r\n    return(\r\n        <div>\r\n            Music\r\n        </div>        \r\n    )\r\n}\r\n\r\nexport default Music","import React from 'react';\r\n\r\nconst News=()=>{\r\n    return(\r\n        <div>\r\n            News\r\n        </div>        \r\n    )\r\n}\r\n\r\nexport default News","import React from 'react';\r\nimport './App.css';\r\nimport { Header } from './components/Header/Header';\r\nimport { Nav } from './components/Navbar/Nav';\r\nimport { Profile } from './components/Profile/Profile';\r\nimport { DialogsContainer } from './components/Dialogs/DialogsContainer';\r\nimport { Route } from 'react-router-dom';\r\nimport Setting from './components/Setting/Setting';\r\nimport Music from './components/Music/Music';\r\nimport News from './components/News/News';\r\n\r\n\r\n\r\n\r\nconst App = (props) => {\r\n  return (    \r\n      <div className='app-wrapper'>\r\n        <Header />\r\n        <Nav />\r\n        <div className='app-wrapper-content'>\r\n          <Route path='/profile' render={()=><Profile />} />\r\n          <Route path='/dialogs' render={()=><DialogsContainer />} />\r\n          <Route path='/news' component={News} />\r\n          <Route path='/music' component={Music} />\r\n          <Route path='/setting' component={Setting} />\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n\r\n\r\nexport default App;","const initialState = {}\r\n\r\nconst sidebarReducer=(state=initialState,action)=>{\r\n\r\n    return state\r\n}\r\nexport default sidebarReducer","import { combineReducers, createStore } from \"redux\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n});\r\n\r\nlet store = createStore(reducers);\r\nexport default store;\r\n","import React from \"react\";\r\nimport * as serviceWorker from './serviceWorker';\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport store from \"./Redux/redux-store\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Provider } from \"./StoreContext\";\r\n\r\nlet rerenderEntireTree = () => {\r\n  ReactDOM.render(\r\n    <BrowserRouter>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </BrowserRouter>,\r\n    document.getElementById(\"root\")\r\n  );\r\n};\r\n\r\nrerenderEntireTree()\r\n\r\nstore.subscribe(()=>{\r\n  rerenderEntireTree()\r\n})\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2eyog\",\"item\":\"Navbar_item__2sQ4m\",\"active\":\"Navbar_active__qb4iJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1BjSN\",\"dialogsItems\":\"Dialogs_dialogsItems__UwFPe\",\"active\":\"Dialogs_active__2na5C\",\"messages\":\"Dialogs_messages__tmKcJ\"};"],"sourceRoot":""}